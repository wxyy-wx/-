"""
Django settings for python222 project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7!w4sfz=pp^$x0y0s7bqk1iuq($%xj6zca!5i%s#8vm1o&05o!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     "corsheaders" ,
    'rest_framework',
    'user.apps.UserConfig',
    'role.apps.RoleConfig',
    'menu.apps.MenuConfig'
]

# DRF全局配置（对应课程文档🔶1-149 DRF认证逻辑）
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 替换课程中rest_framework_jwt的JWTAuthentication
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# 新增simplejwt配置（贴合课程文档🔶1-147 JWT Token生成逻辑）
from datetime import timedelta
SIMPLE_JWT = {
    # Token有效期（课程未指定，默认15分钟，符合常规业务）
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    # 刷新Token有效期（课程未涉及，默认1天，为后续扩展预留）
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    # Token请求头前缀（与课程文档🔶1-177 前端携带Token逻辑一致，需加Bearer）
    'AUTH_HEADER_TYPES': ('Bearer',),
    # 保持Token格式与课程业务兼容（无需额外调整）
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
}



MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware" ,
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user.middleware.JwtAuthenticationMiddleware'
]

CORS_ORIGIN_ALLOW_ALL = True  # 课程文档🔶1-198 允许所有跨域请求
CORS_ALLOW_CREDENTIALS = True # 课程文档🔶1-200 允许携带Cookie

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    ]

ROOT_URLCONF = 'python222.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'python222.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'db_admin2',
    'USER': 'root',
    'PASSWORD': '123456',
    'HOST': 'localhost',
    'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = 'media/'